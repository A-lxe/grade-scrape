(testing /home/types/4500/github/5691/7/rules-tests-0/1-in.json /home/types/4500/github/5691/7/rules-tests-0/1-out.json)
(testing /home/types/4500/18SwDev/Code/7/xrules)
(PASSED /home/types/4500/github/5691/7/rules-tests-0/1-in.json)
(tested /home/types/4500/18SwDev/Code/7/xrules successfully on 1 cases out of 1)
(testing /home/types/4500/github/5691/7/rules-tests-1/2-in.json /home/types/4500/github/5691/7/rules-tests-1/2-out.json)
(testing /home/types/4500/18SwDev/Code/7/xrules)
(PASSED /home/types/4500/github/5691/7/rules-tests-1/2-in.json)
(tested /home/types/4500/18SwDev/Code/7/xrules successfully on 1 cases out of 1)
(testing /home/types/4500/github/5691/7/rules-tests-2/3-in.json /home/types/4500/github/5691/7/rules-tests-2/3-out.json)
(testing /home/types/4500/18SwDev/Code/7/xrules)
(PASSED /home/types/4500/github/5691/7/rules-tests-2/3-in.json)
(tested /home/types/4500/18SwDev/Code/7/xrules successfully on 1 cases out of 1)
(testing /home/types/4500/github/5691/7/rules-tests-3/4-in.json /home/types/4500/github/5691/7/rules-tests-3/4-out.json)
main: +build specification expected, given: '(("0zack1" 0 0 0 0 0) (0 0 0 0 0 0) (0 0 0 "0zack2" 0 0) (0 0 0 0 0 0) (0 "0nate1" "0nate2" 0 0 0) (0 0 0 0 0 0))
(testing /home/types/4500/18SwDev/Code/7/xrules)
---------------------------------
(*** score 0)
(*** on)
'((("0zack1" 0 0 0 0 0)
   (0 0 0 0 0 0)
   (0 0 0 "0zack2" 0 0)
   (0 0 0 0 0 0)
   (0 "0nate1" "0nate2" 0 0 0)
   (0 0 0 0 0 0))
  ("move" "zack1" ("WEST" "PUT"))
  (("0zack1" 0 0 0 0 0)
   (0 0 0 0 0 0)
   (0 0 0 "0zack2" 0 0)
   (0 0 0 0 0 0)
   (0 "0nate1" "0nate2" 0 0 0)
   (0 0 0 0 0 0))
  ("move" "nate1" ("EAST" "PUT"))
  (("0zack1" 0 0 0 0 0)
   (0 0 0 0 0 0)
   (0 0 0 "0zack2" 0 0)
   (0 0 0 0 0 0)
   (0 "0nate1" "0nate2" 0 0 0)
   (0 0 0 0 0 0))
  ("move" "nate1" ("PUT" "SOUTH"))
  ("+build" ("EAST" "NORTH"))
  (("0zack1" 4 0 0 0 0)
   (0 0 0 0 0 0)
   (0 0 0 "0zack2" 0 0)
   (0 0 0 0 0 0)
   (0 "0nate1" "0nate2" 0 0 0)
   (0 0 0 0 0 0))
  ("move" "zack1" ("PUT" "SOUTH"))
  ("+build" ("EAST" "NORTH"))
  (("0zack1" 2 0 0 0 0)
   (0 0 0 0 0 0)
   (0 0 0 "0zack2" 0 0)
   (0 0 0 0 0 0)
   (0 "0nate1" "0nate2" 0 0 0)
   (0 0 0 0 0 0))
  ("move" "zack1" ("EAST" "PUT"))
  (("0zack1" 4 0 0 0 0)
   (0 0 0 0 0 0)
   (0 0 0 "0zack2" 0 0)
   (0 0 0 0 0 0)
   (0 "0nate1" "0nate2" 0 0 0)
   (0 0 0 0 0 0))
  ("move" "zack1" ("WEST" "SOUTH"))
  ("+build" ("WEST" "SOUTH"))
  (("0zack1" 4 0 0 0 0)
   (0 0 0 0 0 0)
   (0 0 0 "0zack2" 0 0)
   (0 0 0 0 0 0)
   (0 "0nate1" "0nate2" 0 0 0)
   (0 0 0 0 0 0))
  ("move" "zack1" ("PUT" "SOUTH"))
  ("+build" ("WEST" "PUT")))
(*** expected)
'("no" "no" "no" "no" "no" "no" "no")
(*** but received)
'(((pretty fast with-newline plain-unicode) ()))
(FAILED /home/types/4500/github/5691/7/rules-tests-3/4-in.json)
(tested /home/types/4500/18SwDev/Code/7/xrules successfully on 0 cases out of 1)
(testing /home/types/4500/github/5691/7/rules-tests-4/5-in.json /home/types/4500/github/5691/7/rules-tests-4/5-out.json)
(testing /home/types/4500/18SwDev/Code/7/xrules)
---------------------------------
(*** score 0)
(*** on)
'((("2zack1" 3 0 0 0 0)
   (0 0 0 0 0 0)
   (0 0 0 "0zack2" 0 0)
   (0 0 0 0 0 0)
   (0 "0nate1" "0nate2" 0 0 0)
   (0 0 0 0 0 0))
  ("move" "zack1" ("EAST" "PUT"))
  ("+build" ("WEST" "PUT"))
  (("2zack1" 2 0 0 0 0)
   (0 0 0 0 0 0)
   (0 0 0 "0zack2" 0 0)
   (0 0 0 0 0 0)
   (0 "0nate1" "0nate2" 0 0 0)
   (0 0 0 0 0 0))
  ("move" "zack1" ("EAST" "PUT"))
  (("2zack1" 0 0 0 0 0)
   (0 0 0 0 0 0)
   (0 0 0 "0zack2" 0 0)
   (0 0 0 0 0 0)
   (0 "0nate1" "0nate2" 0 0 0)
   (0 0 0 0 0 0))
  ("move" "zack1" ("EAST" "PUT"))
  (("2zack1" 0 0 0 0 0)
   (0 0 0 0 0 0)
   (0 0 0 "0zack2" 0 0)
   (0 0 0 0 0 0)
   (0 "0nate1" "0nate2" 0 0 0)
   (0 0 0 0 0 0))
  ("move" "nate1" ("EAST" "NORTH"))
  ("+build" ("EAST" "SOUTH"))
  (("2zack1" 0 0 0 0 0)
   (0 0 0 0 0 0)
   (0 0 0 "0zack2" 0 0)
   (0 0 0 0 0 0)
   (0 "0nate1" "0nate2" 3 0 0)
   (0 0 0 0 0 0))
  ("move" "nate1" ("EAST" "NORTH"))
  ("+build" ("EAST" "SOUTH"))
  (("2zack1" 0 0 0 0 0)
   (0 0 0 0 0 0)
   (0 0 0 "0zack2" 0 0)
   (0 0 1 0 0 0)
   (0 "0nate1" "0nate2" 2 0 0)
   (0 0 0 0 0 0))
  ("move" "nate1" ("EAST" "NORTH"))
  ("+build" ("EAST" "SOUTH")))
(*** expected)
'("yes" "yes" "yes" "yes" "yes" "yes")
(*** but received)
'(((pretty fast with-newline plain-unicode) ("yes")))
(FAILED /home/types/4500/github/5691/7/rules-tests-4/5-in.json)
(tested /home/types/4500/18SwDev/Code/7/xrules successfully on 0 cases out of 1)

